These are the instructions for installing KD SOAP using the CMake buildsystem.
CMake version 3.3 or higher is required.

The qmake (via autogen.py) buildsystem is removed starting with KDSoap version 2.0.

KD SOAP requires Qt with Network and XML support enabled.
Qt Version support:
 * KD SOAP 1.9 or below requires Qt4.6 up to Qt5.15
 * KD SOAP 1.10 requires Qt5.7 up to Qt5.15
 * KD SOAP 2.0 or above requires Qt5.9 up to Qt6.x

Also note that Qt6 builds require a C++17 compliant compiler,
whereas Qt5 builds can get by with C++11 compliance.

Please see the comments at the top of CMakeLists.txt for
the available configuration options you can pass to cmake.

The installation directory defaults to c:\KDAB\KDSoap-<version> on Windows
and /usr/local/KDAB/KDSoap-<version> on non-Windows.  You can change this
location by passing the option -DCMAKE_INSTALL_PREFIX=/install/path to cmake.

1) From the top directory of your KD SOAP installation create a build directory:

     mkdir build

   and change directory into that build directory:

     cd build

2) Now run 'cmake' depending on the kind of build one of the following:
     cmake -DCMAKE_BUILD_TYPE=Debug ..
     cmake -DCMAKE_BUILD_TYPE=Release ..
     cmake -DKDSoap_STATIC=True -DCMAKE_BUILD_TYPE=Debug ..
     cmake -DKDSoap_STATIC=True -DCMAKE_BUILD_TYPE=Release ..

   To define the install-location use for example:
     cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=C:/kdsoap ..
     cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/opt/kdsoap ..

3) Unix

   set your LD_LIBRARY_PATH to point to your KD SOAP installation lib directory.

   If you do not have LD_LIBRARY_PATH set already, then in your terminal run:
    % LD_LIBRARY_PATH=/path/to/kdsoap/lib:$LD_LIBRARY_PATH
    % export LD_LIBRARY_PATH

   The above must be added into your .bashrc or similar to remain. It may also of course
   be run from a shell just before building software using KD SOAP, but in this case
   your settings will only be available for this shell.

4) MacOS

   Proceed as described above, but using DYLD_LIBRARY_PATH instead of LD_LIBRARY_PATH

5) Windows

   For running executables, add the path to the KD Soap dll (kdsoap\bin) into your PATH.
   eg. set PATH=\path\to\kdsoap\bin;%PATH%

   For development, add the path to the KD Soap lib (kdsoaplib) into your LIB environment.
   eg. set LIB=\path\to\kdsoap\lib;%LIB%

6) Build everything by typing:

   From your top-level KD SOAP directory run:

   % make    # Unix, Mac
   % nmake   # Windows

7) (optionally:) Install KD SOAP:

   From your top-level KD SOAP directory run:

   % make install   # Unix, Mac
   % nmake install  # Windows

   This will copy the necessary files into the sub-directories of your installation path:
   For Unix/Linux, Mac this is /usr/local/KDAB/KDSoap-VERSION/
   For Windows this is: C:\KDAB\KDSoap-VERSION\

8) Have a look at the examples applications. They will get you started with KD SOAP.

== Testing ==
To build the testing harness, pass -DKDSoap_TESTS=true to CMake, like so:
  % cmake -DKDSoap_TESTS=true

Then run 'make test' to run the unit tests.

== Using ==
From your CMake project, add

    find_package(KDSoap CONFIG REQUIRED)

or for Qt6

    find_package(KDSoap-qt6 CONFIG)

and link to the imported target KDSoap::kdsoap.
That's all you need to do (the imported target also brings in the include directories)

You may also need to point the CMAKE_PREFIX_PATH environment variable depending
on where you installed KDSoap.
